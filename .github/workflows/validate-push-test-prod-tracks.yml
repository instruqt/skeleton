##############################################################################
# Instruqt Github Actions Workflow
#
# This workflow file and its actions will run a validate/push/test cycle on
# one or more Instruqt tracks directories in your repo. Each job targets a
# separate directory of tracks. All the tracks in each directory must belong
# to the same organization.
#
##############################################################################
name: validate-push-test-prod-tracks

env:
  # Set these values to match your environment. Your token should be 
  # stored as a Github secret in your tracks repo.
  TRACK_DIR: instruqt-tracks
  INSTRUQT_TOKEN: ${{ secrets.INSTRUQT_TOKEN }}

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  GetTracks:
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository code
      uses: actions/checkout@v3
    
    - name: Install yq Package
      uses: ./.github/actions/install-yq

    - name: Create Matrix Data
      run: |
        function skip_enabled() {
          if ! [[ -f "$1/track.yml" ]]; then
              echo "Error: $1 is not a valid track directory"
              return 1
          fi
      
          # Run the yq command to check the tags array and return the result
          yq_result=$(yq '.tags | any_c(test("(?i)no-ci|skip-ci|ci-skip"))' "$1/track.yml")
          echo "$yq_result"
        }

        for t in $(ls -d $TRACK_DIR/*); do
          echo $t
          if [[ $(skip_enabled $t) == 'true' ]]; then
            echo "Skipping $t"
          else
            echo "Adding $t"
            CI_TRACKS+=$t
          fi
        done

        echo $CI_TRACKS

        echo TRACKS="{\\\"tracks\\\":$($CI_TRACKS | jq -R -s -c 'split("\n")[:-1]' | sed 's/"/\\"/g')}" >> $GITHUB_ENV
        echo $GITHUB_ENV
        cat $GITHUB_ENV

    - id: set-matrix
      run: |
        echo "matrix=${{ env.TRACKS }}" >> $GITHUB_OUTPUT
        echo $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  TestProdTracks:
    runs-on: ubuntu-latest
    if: ${{ needs.GetTracks.outputs.matrix != '[]' && needs.GetTracks.outputs.matrix != '' }}
    needs: GetTracks
    strategy:
      matrix: ${{ fromJson(needs.GetTracks.outputs.matrix) }}
    steps:

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Track Validate
        uses: ./.github/actions/validate-track
        with:
          path: ${{ env.TRACK_DIR }}/${{ matrix.tracks.slug }}
      
      - name: Track Push
        uses: ./.github/actions/push-track
        with:
          path: ${{ env.TRACK_DIR }}/${{ matrix.tracks.slug }}
      
      - name: Instruqt Track Test
        uses: ./.github/actions/test-track
        with:
          path: ${{ env.TRACK_DIR }}/${{ matrix.tracks.slug }}